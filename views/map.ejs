<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>B·∫£n ƒë·ªì K√Ω t√∫c x√° ƒê·∫°i h·ªçc B√°ch Khoa H√† N·ªôi - Leaflet</title>
    
    <!-- Leaflet CSS -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/leaflet.min.css" />
    
    <style>
        body {
            margin: 0;
            padding: 0;
            font-family: Arial, sans-serif;
        }
        #map {
            height: 100vh;
            width: 100%;
        }
        .header-bar {
            position: absolute;
            top: 20px;
            left: 50%;
            transform: translateX(-50%);
            z-index: 1000;
            width: 80%;
            max-width: 600px;
            border-radius: 8px;
            box-shadow: 0 2px 15px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }
        .search-container {
            background-color: white;
            display: flex;
            align-items: center;
            padding: 12px 20px;
        }
        .search-icon {
            color: #e91e63;
            font-size: 24px;
            margin-right: 15px;
        }
        #search-input {
            flex-grow: 1;
            border: none;
            outline: none;
            font-size: 16px;
            padding: 8px 0;
        }
        .filter-container {
            display: flex;
            background-color: #f8f8f8;
            border-top: 1px solid #eee;
            overflow-x: auto;
            padding: 8px 10px;
        }
        .filter-btn {
            background: white;
            border: 1px solid #ddd;
            border-radius: 20px;
            padding: 5px 15px;
            margin-right: 10px;
            font-size: 14px;
            white-space: nowrap;
            cursor: pointer;
        }
        .filter-btn.active {
            background: #e91e63;
            color: white;
            border-color: #e91e63;
        }
        .custom-popup {
            max-width: 300px;
        }
        .custom-popup h3 {
            color: #e91e63;
            margin-top: 0;
            margin-bottom: 10px;
        }
        .custom-popup .image {
            width: 100%;
            height: 150px;
            background-color: #f0f0f0;
            margin-bottom: 10px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-style: italic;
            color: #666;
        }
        .custom-popup p {
            margin: 5px 0;
        }
        .custom-popup .action-btns {
            display: flex;
            margin-top: 15px;
        }
        .custom-popup button {
            flex: 1;
            background: #e91e63;
            color: white;
            border: none;
            padding: 8px 10px;
            border-radius: 4px;
            cursor: pointer;
            margin-right: 8px;
        }
        .custom-popup button:last-child {
            margin-right: 0;
            background: #2196F3;
        }
        .legend {
            position: absolute;
            bottom: 30px;
            right: 20px;
            z-index: 999;
            background: white;
            padding: 10px;
            border-radius: 5px;
            box-shadow: 0 1px 5px rgba(0,0,0,0.2);
        }
        .legend-item {
            display: flex;
            align-items: center;
            margin-bottom: 5px;
        }
        .legend-color {
            width: 20px;
            height: 20px;
            border-radius: 50%;
            margin-right: 10px;
        }
        .control-panel {
            position: absolute;
            top: 20px;
            right: 20px;
            z-index: 999;
            background: white;
            border-radius: 5px;
            box-shadow: 0 1px 5px rgba(0,0,0,0.2);
            overflow: hidden;
        }
        .control-btn {
            width: 40px;
            height: 40px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            border-bottom: 1px solid #eee;
        }
        .control-btn:last-child {
            border-bottom: none;
        }
        .control-btn:hover {
            background: #f5f5f5;
        }
    </style>
</head>
<body>
    <div class="header-bar">
        <div class="search-container">
            <div class="search-icon">üè¢</div>
            <input id="search-input" type="text" placeholder="T√¨m k√Ω t√∫c x√° quanh ƒê·∫°i h·ªçc B√°ch Khoa...">
        </div>
        <div class="filter-container">
            <div class="filter-btn" data-filter="all">T·∫•t c·∫£</div>
            <div class="filter-btn" data-filter="cheap">Gi√° r·∫ª</div>
            <div class="filter-btn" data-filter="medium">Gi√° trung b√¨nh</div>
            <div class="filter-btn" data-filter="premium">Cao c·∫•p</div>
            <div class="filter-btn" data-filter="wifi">C√≥ Wifi</div>
            <div class="filter-btn" data-filter="gym">C√≥ ph√≤ng t·∫≠p</div>
        </div>
    </div>

    <div id="map"></div>

    <div class="legend">
        <div class="legend-item">
            <div class="legend-color" style="background-color: #3388ff;"></div>
            <span>ƒê·∫°i h·ªçc B√°ch Khoa</span>
        </div>
        <div class="legend-item">
            <div class="legend-color" style="background-color: #e91e63;"></div>
            <span>K√Ω t√∫c x√° tr∆∞·ªùng</span>
        </div>
        <div class="legend-item">
            <div class="legend-color" style="background-color: #ff9800;"></div>
            <span>K√Ω t√∫c x√° t∆∞ nh√¢n</span>
        </div>
    </div>

    <div class="control-panel">
        <div class="control-btn" id="locate-me" title="V·ªã tr√≠ c·ªßa t√¥i">üìç</div>
        <div class="control-btn" id="zoom-in" title="Ph√≥ng to">‚ûï</div>
        <div class="control-btn" id="zoom-out" title="Thu nh·ªè">‚ûñ</div>
        <div class="control-btn" id="reset-view" title="Kh√¥i ph·ª•c view">üè†</div>
    </div>

    <!-- Leaflet JS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/leaflet.min.js"></script>
    
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // T·∫°o b·∫£n ƒë·ªì
            const map = L.map('map').setView([21.007119, 105.843220], 15);

            // Th√™m OpenStreetMap layer
            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
            }).addTo(map);

            // D·ªØ li·ªáu k√Ω t√∫c x√°
            const dormitories = [
                {
                    name: "KTX ƒê·∫°i h·ªçc B√°ch Khoa - Khu B1",
                    position: [21.005827, 105.845566],
                    address: "S·ªë 1 ƒê·∫°i C·ªì Vi·ªát, Hai B√† Tr∆∞ng, H√† N·ªôi",
                    phone: "024.3869.2008",
                    capacity: "500 sinh vi√™n",
                    amenities: ["WiFi", "ph√≤ng gi·∫∑t", "cƒÉn tin"],
                    price: "300.000 - 500.000 VNƒê/th√°ng",
                    priceCategory: "cheap",
                    type: "school"
                },
                {
                    name: "KTX ƒê·∫°i h·ªçc B√°ch Khoa - Khu B2",
                    position: [21.007123, 105.847213],
                    address: "S·ªë 1 ƒê·∫°i C·ªì Vi·ªát, Hai B√† Tr∆∞ng, H√† N·ªôi",
                    phone: "024.3869.2009",
                    capacity: "450 sinh vi√™n",
                    amenities: ["WiFi", "ph√≤ng gi·∫∑t", "cƒÉn tin", "ph√≤ng t·∫≠p"],
                    price: "350.000 - 550.000 VNƒê/th√°ng",
                    priceCategory: "cheap",
                    type: "school"
                },
                {
                    name: "KTX ƒê·∫°i h·ªçc B√°ch Khoa - Khu B3",
                    position: [21.006512, 105.846123],
                    address: "S·ªë 1 ƒê·∫°i C·ªì Vi·ªát, Hai B√† Tr∆∞ng, H√† N·ªôi",
                    phone: "024.3869.2010",
                    capacity: "600 sinh vi√™n",
                    amenities: ["WiFi", "ph√≤ng gi·∫∑t", "cƒÉn tin", "s√¢n th·ªÉ thao"],
                    price: "320.000 - 520.000 VNƒê/th√°ng",
                    priceCategory: "cheap",
                    type: "school"
                },
                {
                    name: "KTX Ph√°p V√¢n",
                    position: [20.979464, 105.835612],
                    address: "Ng√µ 562 Nguy·ªÖn VƒÉn C·ª´, Long Bi√™n, H√† N·ªôi",
                    phone: "024.3825.1937",
                    capacity: "2000 sinh vi√™n",
                    amenities: ["WiFi", "cƒÉn tin", "ph√≤ng t·ª± h·ªçc", "s√¢n th·ªÉ thao"],
                    price: "250.000 - 450.000 VNƒê/th√°ng",
                    priceCategory: "cheap",
                    type: "school"
                },
                {
                    name: "KTX T∆∞ nh√¢n M·ªπ ƒê√¨nh",
                    position: [21.023519, 105.771455],
                    address: "Khu ƒë√¥ th·ªã M·ªπ ƒê√¨nh, Nam T·ª´ Li√™m, H√† N·ªôi",
                    phone: "024.7109.2468",
                    capacity: "300 sinh vi√™n",
                    amenities: ["WiFi t·ªëc ƒë·ªô cao", "m√°y l·∫°nh", "gi·∫∑t ·ªßi", "b·∫øp chung"],
                    price: "1.200.000 - 1.800.000 VNƒê/th√°ng",
                    priceCategory: "medium",
                    type: "private"
                },
                {
                    name: "KTX Sinh vi√™n B√°ch Khoa Town",
                    position: [21.009325, 105.842156],
                    address: "Ph·ªë T·∫° Quang B·ª≠u, Hai B√† Tr∆∞ng, H√† N·ªôi",
                    phone: "024.3623.1578",
                    capacity: "420 sinh vi√™n",
                    amenities: ["WiFi t·ªëc ƒë·ªô cao", "ƒëi·ªÅu h√≤a", "ph√≤ng gym", "b·∫£o v·ªá 24/7"],
                    price: "1.800.000 - 2.500.000 VNƒê/th√°ng",
                    priceCategory: "premium",
                    type: "private"
                },
                {
                    name: "K√Ω t√∫c x√° X√£ ƒê√†n",
                    position: [21.011023, 105.836892],
                    address: "Ph·ªë X√£ ƒê√†n, ƒê·ªëng ƒêa, H√† N·ªôi",
                    phone: "024.6275.8912",
                    capacity: "150 sinh vi√™n",
                    amenities: ["WiFi", "gi·∫∑t ·ªßi", "b·∫øp chung"],
                    price: "900.000 - 1.300.000 VNƒê/th√°ng",
                    priceCategory: "medium",
                    type: "private"
                },
                {
                    name: "Khu KTX Cao c·∫•p The Dormy",
                    position: [21.003654, 105.850732],
                    address: "Ph·ªë Tr·∫ßn ƒê·∫°i Nghƒ©a, Hai B√† Tr∆∞ng, H√† N·ªôi",
                    phone: "024.7302.5489",
                    capacity: "200 sinh vi√™n",
                    amenities: ["WiFi t·ªëc ƒë·ªô cao", "ƒëi·ªÅu h√≤a", "ph√≤ng gym", "ph√≤ng h·ªçc chung", "nh√† h√†ng", "b·∫£o v·ªá 24/7"],
                    price: "2.500.000 - 3.500.000 VNƒê/th√°ng",
                    priceCategory: "premium",
                    type: "private"
                }
            ];

            // Th√™m marker cho tr∆∞·ªùng ƒê·∫°i h·ªçc B√°ch Khoa
            const university = L.marker([21.007119, 105.843220], {
                icon: L.divIcon({
                    className: 'custom-div-icon',
                    html: `<div style="background-color: #3388ff; width: 20px; height: 20px; border-radius: 50%; border: 2px solid white;"></div>`,
                    iconSize: [25, 25],
                    iconAnchor: [12, 12]
                })
            }).addTo(map);

            university.bindPopup(`
                <div class="custom-popup">
                    <h3>ƒê·∫°i h·ªçc B√°ch Khoa H√† N·ªôi</h3>
                    <div class="image">H√¨nh ·∫£nh tr∆∞·ªùng</div>
                    <p><strong>ƒê·ªãa ch·ªâ:</strong> S·ªë 1 ƒê·∫°i C·ªì Vi·ªát, Hai B√† Tr∆∞ng, H√† N·ªôi</p>
                    <p><strong>Website:</strong> <a href="#" onclick="alert('Chuy·ªÉn h∆∞·ªõng ƒë·∫øn trang web ƒêHBKHN')">hust.edu.vn</a></p>
                    <div class="action-btns">
                        <button onclick="alert('Xem th√¥ng tin tr∆∞·ªùng')">Th√¥ng tin</button>
                        <button onclick="alert('Ch·ªâ ƒë∆∞·ªùng ƒë·∫øn tr∆∞·ªùng')">Ch·ªâ ƒë∆∞·ªùng</button>
                    </div>
                </div>
            `);

            // T·∫°o c√°c markers cho c√°c k√Ω t√∫c x√°
            const dormMarkers = [];
            
            dormitories.forEach(dorm => {
                // T·∫°o m√†u d·ª±a tr√™n lo·∫°i k√Ω t√∫c x√°
                const markerColor = dorm.type === 'school' ? '#e91e63' : '#ff9800';
                
                const marker = L.marker(dorm.position, {
                    icon: L.divIcon({
                        className: 'custom-div-icon',
                        html: `<div style="background-color: ${markerColor}; width: 20px; height: 20px; border-radius: 50%; border: 2px solid white;"></div>`,
                        iconSize: [25, 25],
                        iconAnchor: [12, 12]
                    })
                }).addTo(map);

                // T·∫°o danh s√°ch ti·ªán √≠ch
                const amenitiesList = dorm.amenities.join(", ");
                
                // Popup khi click v√†o marker
                marker.bindPopup(`
                    <div class="custom-popup">
                        <h3>${dorm.name}</h3>
                        <div class="image">H√¨nh ·∫£nh k√Ω t√∫c x√°</div>
                        <p><strong>ƒê·ªãa ch·ªâ:</strong> ${dorm.address}</p>
                        <p><strong>Li√™n h·ªá:</strong> ${dorm.phone}</p>
                        <p><strong>S·ª©c ch·ª©a:</strong> ${dorm.capacity}</p>
                        <p><strong>Ti·ªán √≠ch:</strong> ${amenitiesList}</p>
                        <p><strong>Gi√° ph√≤ng:</strong> ${dorm.price}</p>
                        <div class="action-btns">
                            <button onclick="alert('ƒêƒÉng k√Ω k√Ω t√∫c x√° ${dorm.name}')">ƒêƒÉng k√Ω</button>
                            <button onclick="alert('Ch·ªâ ƒë∆∞·ªùng ƒë·∫øn ${dorm.name}')">Ch·ªâ ƒë∆∞·ªùng</button>
                        </div>
                    </div>
                `);

                // L∆∞u marker v√†o m·∫£ng k√®m th√¥ng tin ƒë·ªÉ l·ªçc sau n√†y
                dormMarkers.push({
                    marker: marker,
                    data: dorm
                });
            });

            // X·ª≠ l√Ω t√¨m ki·∫øm
            const searchInput = document.getElementById('search-input');
            searchInput.addEventListener('input', function() {
                const searchText = this.value.toLowerCase();
                if (searchText.length < 2) return;
                
                dormitories.forEach((dorm, index) => {
                    if (dorm.name.toLowerCase().includes(searchText) || 
                        dorm.address.toLowerCase().includes(searchText)) {
                        map.setView(dorm.position, 17);
                        dormMarkers[index].marker.openPopup();
                    }
                });
            });

            // X·ª≠ l√Ω l·ªçc
            const filterButtons = document.querySelectorAll('.filter-btn');
            filterButtons.forEach(button => {
                button.addEventListener('click', function() {
                    // B·ªè active tr·∫°ng th√°i tr∆∞·ªõc ƒë√≥
                    document.querySelector('.filter-btn.active')?.classList.remove('active');
                    
                    // Th√™m active cho n√∫t hi·ªán t·∫°i
                    this.classList.add('active');
                    
                    const filter = this.getAttribute('data-filter');
                    
                    // L·ªçc markers d·ª±a tr√™n b·ªô l·ªçc
                    dormMarkers.forEach(item => {
                        const dorm = item.data;
                        const marker = item.marker;
                        
                        if (filter === 'all') {
                            marker.addTo(map);
                        } else if (filter === 'cheap' && dorm.priceCategory === 'cheap') {
                            marker.addTo(map);
                        } else if (filter === 'medium' && dorm.priceCategory === 'medium') {
                            marker.addTo(map);
                        } else if (filter === 'premium' && dorm.priceCategory === 'premium') {
                            marker.addTo(map);
                        } else if (filter === 'wifi' && dorm.amenities.some(a => a.toLowerCase().includes('wifi'))) {
                            marker.addTo(map);
                        } else if (filter === 'gym' && dorm.amenities.some(a => a.toLowerCase().includes('t·∫≠p') || a.toLowerCase().includes('gym'))) {
                            marker.addTo(map);
                        } else {
                            map.removeLayer(marker);
                        }
                    });
                });
            });
            
            // Set active cho filter ƒë·∫ßu ti√™n
            filterButtons[0].classList.add('active');

            // X·ª≠ l√Ω c√°c n√∫t ƒëi·ªÅu khi·ªÉn
            document.getElementById('locate-me').addEventListener('click', function() {
                if (navigator.geolocation) {
                    navigator.geolocation.getCurrentPosition(
                        position => {
                            const userLocation = [position.coords.latitude, position.coords.longitude];
                            map.setView(userLocation, 15);
                            
                            // T·∫°o marker cho v·ªã tr√≠ c·ªßa ng∆∞·ªùi d√πng
                            L.marker(userLocation, {
                                icon: L.divIcon({
                                    className: 'custom-div-icon',
                                    html: `<div style="background-color: #4CAF50; width: 20px; height: 20px; border-radius: 50%; border: 2px solid white;"></div>`,
                                    iconSize: [25, 25],
                                    iconAnchor: [12, 12]
                                })
                            }).addTo(map)
                              .bindPopup("B·∫°n ƒëang ·ªü ƒë√¢y!")
                              .openPopup();
                        },
                        error => {
                            alert("Kh√¥ng th·ªÉ x√°c ƒë·ªãnh v·ªã tr√≠ c·ªßa b·∫°n: " + error.message);
                        }
                    );
                } else {
                    alert("Tr√¨nh duy·ªát c·ªßa b·∫°n kh√¥ng h·ªó tr·ª£ ƒë·ªãnh v·ªã");
                }
            });

            document.getElementById('zoom-in').addEventListener('click', function() {
                map.zoomIn();
            });

            document.getElementById('zoom-out').addEventListener('click', function() {
                map.zoomOut();
            });

            document.getElementById('reset-view').addEventListener('click', function() {
                map.setView([21.007119, 105.843220], 15);
            });
        });
    </script>
</body>
</html>