<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Đăng ký phòng ký túc xá</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Quicksand:wght@400;500;600;700&display=swap" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Quicksand', sans-serif;
        }

        :root {
            --primary-color: #e61a1a;
            --text-color: #333;
            --bg-color: #f8f3ef;
            --menu-bg: white;
        }

        body {
            background-color: var(--bg-color);
            min-height: 100vh;
        }

        /* Header styles */
        .header {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            padding: 0.8rem 2rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
            background-color: var(--menu-bg);
            z-index: 2000;
            box-shadow: 0 5px 20px rgba(0, 0, 0, 0.05);
        }

        .header-logo {
            display: flex;
            align-items: center;
        }

        .header-logo img {
            max-height: 2.5rem;
            width: auto;
        }

        .nav-container {
            display: flex;
            align-items: center;
            justify-content: space-between;
            flex-grow: 1;
            margin-left: 4rem;
        }

        .nav-links {
            display: flex;
            gap: 3rem;
        }

        .nav-link {
            color: var(--text-color);
            text-decoration: none;
            font-size: 0.95rem;
            font-weight: 600;
            padding: 0.8rem 0;
            position: relative;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            transition: all 0.3s ease;
        }

        .nav-link::after {
            content: '';
            position: absolute;
            width: 4px;
            height: 4px;
            border-radius: 50%;
            background-color: var(--primary-color);
            bottom: 0.4rem;
            left: 50%;
            opacity: 0;
            transform: translateX(-50%) scale(0);
            transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
        }

        .nav-link:hover {
            color: var(--primary-color);
        }

        .nav-link:hover::after {
            opacity: 1;
            transform: translateX(-50%) scale(1);
        }

        .nav-link.active-link {
            color: var(--primary-color);
        }

        .nav-link.active-link::after {
            opacity: 1;
            transform: translateX(-50%) scale(1);
        }

        /* Main content styles */
        .main-container {
            padding-top: 100px;
            padding-bottom: 50px;
        }

        .registration-card {
            background-color: white;
            border-radius: 10px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
            padding: 30px;
            margin-bottom: 30px;
        }

        .form-section-title {
            color: var(--primary-color);
            border-bottom: 2px solid var(--primary-color);
            padding-bottom: 10px;
            margin-bottom: 20px;
        }

        /* Room selection styles */
        .floor-section {
            margin-top: 30px;
            margin-bottom: 40px;
        }

        .floor-title {
            background-color: #f8f9fa;
            padding: 10px 15px;
            border-radius: 5px;
            font-weight: 600;
            color: var(--primary-color);
            margin-bottom: 15px;
            border-left: 4px solid var(--primary-color);
        }

        .room-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
            gap: 15px;
        }

        .room-card {
            border: 1px solid #dee2e6;
            border-radius: 5px;
            padding: 10px;
            text-align: center;
            transition: all 0.3s ease;
            cursor: pointer;
            position: relative;
        }

        .room-card.available {
            background-color: #e8f4ff;
            border-color: #abd5ff;
        }

        .room-card.partial {
            background-color: #fff8e8;
            border-color: #ffe0ab;
        }

        .room-card.full {
            background-color: #ffe8e8;
            border-color: #ffabab;
            opacity: 0.7;
            cursor: not-allowed;
        }

        .room-card:hover:not(.full) {
            transform: translateY(-5px);
            box-shadow: 0 5px 10px rgba(0,0,0,0.1);
        }

        .room-card.selected {
            background-color: #d1f8d1;
            border-color: #81e181;
            transform: translateY(-5px);
            box-shadow: 0 5px 10px rgba(0,0,0,0.1);
        }

        .room-card.selected::after {
            content: '\f00c';
            font-family: 'Font Awesome 5 Free';
            font-weight: 900;
            position: absolute;
            top: -8px;
            right: -8px;
            background-color: #28a745;
            color: white;
            border-radius: 50%;
            width: 25px;
            height: 25px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 12px;
        }

        .room-number {
            font-weight: 600;
            margin-bottom: 5px;
        }

        .room-type {
            font-size: 0.8rem;
            color: #6c757d;
            margin-bottom: 5px;
        }

        .room-capacity {
            font-size: 0.9rem;
            margin-bottom: 5px;
        }

        .room-price {
            font-weight: 600;
            color: var(--primary-color);
        }

        .btn-primary {
            background-color: var(--primary-color);
            border-color: var(--primary-color);
            padding: 10px 20px;
            font-weight: 600;
        }

        .btn-primary:hover {
            background-color: #c01616;
            border-color: #c01616;
        }

        /* Success modal styles */
        .success-icon {
            font-size: 4rem;
            color: #28a745;
            margin-bottom: 20px;
        }

        .spinner-border {
            color: var(--primary-color);
            width: 3rem;
            height: 3rem;
        }
    </style>
</head>
<body>
    <!-- Header -->
    <header class="header">
        <div class="header-logo">
            <img src="/image/logo.png" alt="HUST Logo">
        </div>
        <div class="nav-container">
            <nav class="nav-links">
                <a href="/" class="nav-link">TRANG CHỦ</a>
                <a href="/map" class="nav-link">BẢN ĐỒ</a>
                <a href="/register" class="nav-link active-link">ĐĂNG KÝ PHÒNG</a>
            </nav>
            <a href="/login" class="btn btn-outline-danger">ĐĂNG NHẬP</a>
        </div>
    </header>

    <div class="container main-container">
        <div class="row">
            <div class="col-md-12">
                <h2 class="mb-4">Đăng ký phòng ký túc xá</h2>
                
                <!-- Dormitory selection -->
                <div class="registration-card">
                    <h4 class="form-section-title">Chọn ký túc xá</h4>
                    <div class="row">
                        <div class="col-md-12 mb-3">
                            <select class="form-select" id="dormitorySelect">
                                <option value="" selected disabled>-- Chọn ký túc xá --</option>
                            </select>
                        </div>
                    </div>
                </div>
                
                <!-- Student information form -->
                <div class="registration-card">
                    <h4 class="form-section-title">Thông tin sinh viên</h4>
                    <form id="studentInfoForm">
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="studentId" class="form-label">Mã số sinh viên <span class="text-danger">*</span></label>
                                <input type="text" class="form-control" id="studentId" required>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="fullName" class="form-label">Họ và tên <span class="text-danger">*</span></label>
                                <input type="text" class="form-control" id="fullName" required>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="email" class="form-label">Email học tập <span class="text-danger">*</span></label>
                                <input type="email" class="form-control" id="email" required>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="phone" class="form-label">Số điện thoại <span class="text-danger">*</span></label>
                                <input type="tel" class="form-control" id="phone" required>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="faculty" class="form-label">Khoa/Viện</label>
                                <select class="form-select" id="faculty">
                                    <option value="" selected disabled>-- Chọn khoa/viện --</option>
                                    <option value="cntt">Trường Công nghệ Thông tin và Truyền thông</option>
                                    <option value="co_khi">Trường Cơ khí</option>
                                    <option value="dien">Viện Điện</option>
                                    <option value="hoa">Viện Kỹ thuật Hóa học</option>
                                    <option value="vl">Viện Vật lý kỹ thuật</option>
                                    <option value="nn">Viện Ngoại ngữ</option>
                                    <option value="kinh_te">Viện Kinh tế và Quản lý</option>
                                    <option value="other">Khác</option>
                                </select>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="academicYear" class="form-label">Năm học</label>
                                <select class="form-select" id="academicYear">
                                    <option value="" selected disabled>-- Chọn năm học --</option>
                                    <option value="1">Năm 1</option>
                                    <option value="2">Năm 2</option>
                                    <option value="3">Năm 3</option>
                                    <option value="4">Năm 4</option>
                                    <option value="5">Năm 5</option>
                                    <option value="6">Sau đại học</option>
                                </select>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label class="form-label">Giới tính</label>
                                <div>
                                    <div class="form-check form-check-inline">
                                        <input class="form-check-input" type="radio" name="gender" id="genderMale" value="male" checked>
                                        <label class="form-check-label" for="genderMale">Nam</label>
                                    </div>
                                    <div class="form-check form-check-inline">
                                        <input class="form-check-input" type="radio" name="gender" id="genderFemale" value="female">
                                        <label class="form-check-label" for="genderFemale">Nữ</label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
                
                <!-- Room selection -->
                <div id="roomSelectionContainer" class="registration-card" style="display: none;">
                    <h4 class="form-section-title">Chọn phòng</h4>
                    <div class="alert alert-info">
                        <i class="fas fa-info-circle me-2"></i>
                        Vui lòng chọn phòng từ danh sách bên dưới. Các phòng màu xanh (còn trống), màu vàng (còn chỗ), màu đỏ (đã đầy).
                    </div>
                    
                    <div id="floorsContainer">
                        <!-- Floors and rooms will be populated from database -->
                        <div class="text-center my-5 d-none" id="loadingRooms">
                            <div class="spinner-border" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                            <p class="mt-3">Đang tải thông tin phòng...</p>
                        </div>
                    </div>
                </div>
                
                <!-- Submit section -->
                <div class="text-center mt-4">
                    <button type="button" id="submitRegistration" class="btn btn-primary btn-lg" disabled>
                        Xác nhận đăng ký
                    </button>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Registration Success Modal -->
    <div class="modal fade" id="successModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-body text-center p-5">
                    <div class="success-icon">
                        <i class="fas fa-check-circle"></i>
                    </div>
                    <h4 class="mb-4">Đăng ký thành công!</h4>
                    <p class="mb-3">Bạn đã đăng ký phòng thành công. Thông tin đăng ký của bạn:</p>
                    <div class="text-start bg-light p-3 mb-4 rounded">
                        <p><strong>Họ tên:</strong> <span id="summaryName"></span></p>
                        <p><strong>MSSV:</strong> <span id="summaryStudentId"></span></p>
                        <p><strong>Ký túc xá:</strong> <span id="summaryDorm"></span></p>
                        <p><strong>Phòng:</strong> <span id="summaryRoom"></span></p>
                        <p><strong>Ngày đăng ký:</strong> <span id="summaryDate"></span></p>
                    </div>
                    <p class="mb-4">Vui lòng kiểm tra email để xác nhận đăng ký.</p>
                    <button type="button" class="btn btn-primary" data-bs-dismiss="modal">Đóng</button>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Bootstrap and JavaScript libraries -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Check if dormId is in URL parameters
            const urlParams = new URLSearchParams(window.location.search);
            const dormId = urlParams.get('dormId');
            
            // DOM elements
            const dormitorySelect = document.getElementById('dormitorySelect');
            const roomSelectionContainer = document.getElementById('roomSelectionContainer');
            const floorsContainer = document.getElementById('floorsContainer');
            const loadingRooms = document.getElementById('loadingRooms');
            const submitButton = document.getElementById('submitRegistration');
            
            // Form elements
            const studentIdInput = document.getElementById('studentId');
            const fullNameInput = document.getElementById('fullName');
            const emailInput = document.getElementById('email');
            const phoneInput = document.getElementById('phone');
            const facultySelect = document.getElementById('faculty');
            const academicYearSelect = document.getElementById('academicYear');
            const genderMale = document.getElementById('genderMale');
            
            // Modal elements
            const successModal = new bootstrap.Modal(document.getElementById('successModal'));
            const summaryName = document.getElementById('summaryName');
            const summaryStudentId = document.getElementById('summaryStudentId');
            const summaryDorm = document.getElementById('summaryDorm');
            const summaryRoom = document.getElementById('summaryRoom');
            const summaryDate = document.getElementById('summaryDate');
            
            // State variables
            let selectedDormitory = null;
            let selectedRoom = null;
            let dormitories = [];
            
            // Load available dormitories
            fetchDormitories();
            
            // Event listeners
            dormitorySelect.addEventListener('change', handleDormitoryChange);
            submitButton.addEventListener('click', handleSubmitRegistration);
            
            // Validate required fields
            const requiredFields = [studentIdInput, fullNameInput, emailInput, phoneInput];
            requiredFields.forEach(field => {
                field.addEventListener('input', validateForm);
            });
            
            function fetchDormitories() {
                // Show loading indicator
                dormitorySelect.disabled = true;
                const defaultOption = dormitorySelect.options[0];
                dormitorySelect.innerHTML = '';
                dormitorySelect.appendChild(defaultOption);
                
                // Add a loading indicator
                const loadingIndicator = document.createElement('div');
                loadingIndicator.id = 'loading-dormitories';
                loadingIndicator.className = 'mt-2 text-muted d-flex align-items-center';
                loadingIndicator.innerHTML = '<div class="spinner-border spinner-border-sm me-2" role="status"></div> Đang tải danh sách ký túc xá...';
                dormitorySelect.parentNode.appendChild(loadingIndicator);
                
                fetch('/api/dormitories/registration')
                    .then(response => {
                        if (!response.ok) {
                            throw new Error(`HTTP error! Status: ${response.status}`);
                        }
                        return response.json();
                    })
                    .then(data => {
                        // Remove loading indicator
                        document.getElementById('loading-dormitories')?.remove();
                        dormitorySelect.disabled = false;
                        
                        if (Array.isArray(data) && data.length > 0) {
                            dormitories = data;
                            populateDormitorySelect(data);
                            
                            // Check for dormitory ID in URL parameters
                            if (dormId) {
                                for (let i = 0; i < dormitorySelect.options.length; i++) {
                                    if (dormitorySelect.options[i].value === dormId) {
                                        dormitorySelect.selectedIndex = i;
                                        // Trigger change event to load rooms
                                        handleDormitoryChange();
                                        break;
                                    }
                                }
                            }
                        } else {
                            throw new Error('Không có dữ liệu ký túc xá');
                        }
                    })
                    .catch(error => {
                        console.error('Error fetching dormitories:', error);
                        
                        // Remove loading indicator
                        document.getElementById('loading-dormitories')?.remove();
                        dormitorySelect.disabled = false;
                        
                        // Show error message with retry button
                        const errorContainer = document.createElement('div');
                        errorContainer.id = 'dormitory-error';
                        errorContainer.className = 'mt-3';
                        
                        const errorMessage = document.createElement('div');
                        errorMessage.className = 'alert alert-danger';
                        errorMessage.innerHTML = '<i class="fas fa-exclamation-circle me-2"></i>Không thể tải danh sách ký túc xá. Vui lòng thử lại sau.';
                        
                        const retryButton = document.createElement('button');
                        retryButton.className = 'btn btn-outline-primary mt-2';
                        retryButton.innerHTML = '<i class="fas fa-sync-alt me-2"></i>Thử lại';
                        retryButton.onclick = function(e) {
                            e.preventDefault();
                            document.getElementById('dormitory-error')?.remove();
                            fetchDormitories();
                        };
                        
                        errorContainer.appendChild(errorMessage);
                        errorContainer.appendChild(retryButton);
                        dormitorySelect.parentNode.appendChild(errorContainer);
                    });
            }
            
            function populateDormitorySelect(dormitories) {
                // Clear existing options except the first one
                while (dormitorySelect.options.length > 1) {
                    dormitorySelect.remove(1);
                }
                
                if (dormitories.length === 0) {
                    // Add a message if there are no dormitories
                    const option = document.createElement('option');
                    option.disabled = true;
                    option.textContent = 'Không có ký túc xá nào khả dụng';
                    dormitorySelect.appendChild(option);
                    
                    // Show an alert message
                    const alertMessage = document.createElement('div');
                    alertMessage.className = 'alert alert-warning mt-3';
                    alertMessage.innerHTML = '<i class="fas fa-info-circle me-2"></i>Hiện tại không có ký túc xá nào mở đăng ký. Vui lòng quay lại sau.';
                    dormitorySelect.parentNode.appendChild(alertMessage);
                    
                    return;
                }
                
                // Sort dormitories alphabetically by name
                dormitories.sort((a, b) => a.name.localeCompare(b.name));
                
                // Add dormitories to select
                dormitories.forEach(dorm => {
                    const option = document.createElement('option');
                    option.value = dorm._id;
                    option.textContent = dorm.name;
                    
                    // Add additional information as data attributes
                    if (dorm.details) {
                        if (dorm.details.category) {
                            option.dataset.category = dorm.details.category;
                        }
                        if (dorm.details.type) {
                            option.dataset.type = dorm.details.type;
                        }
                    }
                    
                    dormitorySelect.appendChild(option);
                });
                
                // Add a success message to confirm loading
                const successMessage = document.createElement('div');
                successMessage.id = 'dormitory-success';
                successMessage.className = 'alert alert-success mt-3';
                successMessage.innerHTML = `<i class="fas fa-check-circle me-2"></i>Đã tải ${dormitories.length} ký túc xá khả dụng.`;
                dormitorySelect.parentNode.appendChild(successMessage);
                
                // Remove success message after 3 seconds
                setTimeout(() => {
                    document.getElementById('dormitory-success')?.remove();
                }, 3000);
            }
            
            function handleDormitoryChange() {
                const dormitoryId = dormitorySelect.value;
                
                if (dormitoryId) {
                    selectedDormitory = dormitoryId;
                    fetchRooms(dormitoryId);
                    roomSelectionContainer.style.display = 'block';
                    loadingRooms.classList.remove('d-none');
                    floorsContainer.innerHTML = '';
                    
                    // Reset room selection
                    selectedRoom = null;
                    validateForm();
                } else {
                    roomSelectionContainer.style.display = 'none';
                }
            }
            
            function fetchRooms(dormitoryId) {
                fetch(`/api/dormitories/${dormitoryId}/room-status`)
                    .then(response => response.json())
                    .then(data => {
                        loadingRooms.classList.add('d-none');
                        renderRooms(data);
                    })
                    .catch(error => {
                        console.error('Error fetching rooms:', error);
                        loadingRooms.classList.add('d-none');
                        floorsContainer.innerHTML = '<div class="alert alert-danger">Không thể tải thông tin phòng. Vui lòng thử lại sau.</div>';
                    });
            }
            
            function renderRooms(floors) {
                floorsContainer.innerHTML = '';
                
                // Sort floors by floor number
                floors.sort((a, b) => a.floorNumber - b.floorNumber);
                
                floors.forEach(floor => {
                    const floorSection = document.createElement('div');
                    floorSection.className = 'floor-section';
                    
                    const floorTitle = document.createElement('div');
                    floorTitle.className = 'floor-title';
                    floorTitle.innerHTML = `<i class="fas fa-building me-2"></i>Tầng ${floor.floorNumber}`;
                    
                    const roomGrid = document.createElement('div');
                    roomGrid.className = 'room-grid';
                    
                    // Sort rooms by room number
                    floor.rooms.sort((a, b) => {
                        return a.roomNumber.localeCompare(b.roomNumber, undefined, { numeric: true });
                    });
                    
                    floor.rooms.forEach(room => {
                        const roomCard = document.createElement('div');
                        
                        // Determine room status
                        let statusClass = '';
                        if (room.currentOccupants === 0) {
                            statusClass = 'available';
                        } else if (room.available) {
                            statusClass = 'partial';
                        } else {
                            statusClass = 'full';
                        }
                        
                        roomCard.className = `room-card ${statusClass}`;
                        
                        // Disable selection for full rooms
                        if (statusClass !== 'full') {
                            roomCard.addEventListener('click', () => selectRoom(roomCard, room.roomNumber, floor.floorNumber));
                        }
                        
                        // Translate room type to Vietnamese
                        let roomTypeText = '';
                        switch(room.roomType) {
                            case '8-person': roomTypeText = 'Phòng 8 người'; break;
                            case '4-person-service': roomTypeText = 'Phòng 4 người (dịch vụ)'; break;
                            case '5-person': roomTypeText = 'Phòng 5 người'; break;
                            case '10-person': roomTypeText = 'Phòng 10 người'; break;
                            default: roomTypeText = room.roomType;
                        }
                        
                        roomCard.innerHTML = `
                            <div class="room-number">${room.roomNumber}</div>
                            <div class="room-type">${roomTypeText}</div>
                            <div class="room-capacity">${room.currentOccupants}/${room.maxCapacity} chỗ</div>
        
                        `;
                        
                        roomGrid.appendChild(roomCard);
                    });
                    
                    floorSection.appendChild(floorTitle);
                    floorSection.appendChild(roomGrid);
                    floorsContainer.appendChild(floorSection);
                });
            }
            
            function selectRoom(roomCard, roomNumber, floorNumber) {
                // Remove selection from all room cards
                document.querySelectorAll('.room-card.selected').forEach(card => {
                    card.classList.remove('selected');
                });
                
                // Add selection to clicked room
                roomCard.classList.add('selected');
                
                // Update selected room
                selectedRoom = {
                    roomNumber: roomNumber,
                    floorNumber: floorNumber
                };
                
                validateForm();
            }
            
            function validateForm() {
                // Check if all required fields are filled
                const isFormFilled = requiredFields.every(field => field.value.trim() !== '');
                
                // Check if room is selected
                const isRoomSelected = selectedRoom !== null;
                
                // Enable/disable submit button
                submitButton.disabled = !(isFormFilled && isRoomSelected);
            }
            
            function handleSubmitRegistration() {
                // Get selected dormitory name
                const selectedDormitoryName = dormitorySelect.options[dormitorySelect.selectedIndex].text;
                
                // Get form data
                const registrationData = {
                    studentId: studentIdInput.value,
                    fullName: fullNameInput.value,
                    email: emailInput.value,
                    phone: phoneInput.value,
                    faculty: facultySelect.value,
                    academicYear: academicYearSelect.value,
                    gender: genderMale.checked ? 'male' : 'female',
                    dormitoryId: selectedDormitory,
                    roomNumber: selectedRoom.roomNumber
                };
                
                // Submit registration
                fetch('/api/registration', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(registrationData)
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // Show success modal
                        summaryName.textContent = registrationData.fullName;
                        summaryStudentId.textContent = registrationData.studentId;
                        summaryDorm.textContent = selectedDormitoryName;
                        summaryRoom.textContent = selectedRoom.roomNumber;
                        summaryDate.textContent = new Date().toLocaleDateString('vi-VN');
                        
                        successModal.show();
                        
                        // Reset form
                        document.getElementById('studentInfoForm').reset();
                        dormitorySelect.selectedIndex = 0;
                        roomSelectionContainer.style.display = 'none';
                        selectedRoom = null;
                        validateForm();
                    } else {
                        throw new Error(data.error || 'Đăng ký không thành công');
                    }
                })
                .catch(error => {
                    console.error('Error submitting registration:', error);
                    alert('Đăng ký không thành công: ' + error.message);
                });
            }
        });
    </script>
</body>
</html>